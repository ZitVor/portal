{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kusia\\\\Downloads\\\\Projects\\\\Diplom\\\\client\\\\src\\\\pages\\\\SuperUser\\\\Estimate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\nimport { AuthContext } from '../../context/AuthContext';\nimport { useHttp } from '../../hook/http.hook';\nimport { Loader } from '../../сomponents/Loader';\nimport { EstimateInfo } from './EstimateInfo';\nimport '../../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Estimate = () => {\n  _s();\n\n  s;\n  const {\n    token\n  } = useContext(AuthContext);\n  const {\n    request,\n    loading\n  } = useHttp();\n  const [decisive, setDecisive] = useState(null);\n  const decisiveId = useParams().id;\n  const getDesicive = useCallback(async () => {\n    try {\n      const fetched = await request(`/api/decisive/getby/${decisiveId}`, 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      setDecisive(fetched);\n    } catch (e) {}\n  }, [token, decisiveId, request]);\n  useEffect(() => {\n    getDesicive();\n  }, [getDesicive]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading && decisive && /*#__PURE__*/_jsxDEV(EstimateInfo, {\n      link: decisive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 35\n    }, this)\n  }, void 0, false);\n};\n\n_s(Estimate, \"5MubrKP3jBrhkl1tKx4vm8cyWRI=\", false, function () {\n  return [useHttp, useParams];\n});\n\n_c = Estimate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Estimate\");","map":{"version":3,"sources":["C:/Users/Kusia/Downloads/Projects/Diplom/client/src/pages/SuperUser/Estimate.js"],"names":["React","useCallback","useContext","useEffect","useState","NavLink","useHistory","useParams","AuthContext","useHttp","Loader","EstimateInfo","Estimate","s","token","request","loading","decisive","setDecisive","decisiveId","id","getDesicive","fetched","Authorization","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,WAAd,EAA2BC,UAA3B,EAAuCC,SAAvC,EAAkDC,QAAlD,QAAiE,OAAjE;AACA,SAAQC,OAAR,EAAiBC,UAAjB,EAA6BC,SAA7B,QAA6C,kBAA7C;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAAQC,MAAR,QAAqB,yBAArB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,OAAO,iBAAP;;;AACA,OAAO,MAAOC,QAAQ,GAAG,MAAK;AAAA;;AAACC,EAAAA,CAAC;AAC5B,QAAM;AAACC,IAAAA;AAAD,MAAUZ,UAAU,CAACM,WAAD,CAA1B;AACA,QAAM;AAACO,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBP,OAAO,EAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAMe,UAAU,GAAGZ,SAAS,GAAGa,EAA/B;AAEA,QAAMC,WAAW,GAAGpB,WAAW,CAAC,YAAY;AAC1C,QAAI;AACF,YAAMqB,OAAO,GAAG,MAAMP,OAAO,CAAE,uBAAsBI,UAAW,EAAnC,EAAsC,KAAtC,EAA6C,IAA7C,EAAmD;AAC9EI,QAAAA,aAAa,EAAG,UAAST,KAAM;AAD+C,OAAnD,CAA7B;AAGAI,MAAAA,WAAW,CAACI,OAAD,CAAX;AACD,KALD,CAKE,OAAOE,CAAP,EAAU,CAAE;AACf,GAP8B,EAO5B,CAACV,KAAD,EAAQK,UAAR,EAAoBJ,OAApB,CAP4B,CAA/B;AASAZ,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAIL,OAAJ,EAAa;AACX,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,cACI,CAACA,OAAD,IAAYC,QAAZ,iBAAwB,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA;AAD5B,mBADF;AAMH,CA7BM;;GAAOL,Q;UAEiBH,O,EAERF,S;;;KAJTK,Q","sourcesContent":["import React,{useCallback, useContext, useEffect, useState} from 'react'\r\nimport {NavLink, useHistory, useParams} from 'react-router-dom'\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport { useHttp } from '../../hook/http.hook'\r\nimport {Loader} from '../../сomponents/Loader'\r\nimport {EstimateInfo} from './EstimateInfo'\r\nimport '../../index.css'\r\nexport const  Estimate = () =>{s\r\n    const {token} = useContext(AuthContext)\r\n    const {request, loading} = useHttp()\r\n    const [decisive, setDecisive] = useState(null)\r\n    const decisiveId = useParams().id\r\n  \r\n    const getDesicive = useCallback(async () => {\r\n      try {\r\n        const fetched = await request(`/api/decisive/getby/${decisiveId}`, 'GET', null, {\r\n          Authorization: `Bearer ${token}`\r\n        })\r\n        setDecisive(fetched)\r\n      } catch (e) {}\r\n    }, [token, decisiveId, request])\r\n  \r\n    useEffect(() => {\r\n      getDesicive()\r\n    }, [getDesicive])\r\n  \r\n    if (loading) {\r\n      return <Loader />\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        { !loading && decisive && <EstimateInfo link={decisive} /> }\r\n      </>\r\n    )\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}