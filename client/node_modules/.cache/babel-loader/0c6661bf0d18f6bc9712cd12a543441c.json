{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kusia\\\\Downloads\\\\Projects\\\\Diplom\\\\client\\\\src\\\\Admin\\\\CommentInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CommentInfo = ({\n  comment,\n  deleteHandler,\n  putHandler\n}) => {\n  _s();\n\n  console.log(deleteHandler);\n  const [parsedComment, setParsedComment] = useState(null);\n  useEffect(() => {\n    if (comment) {\n      console.log(comment);\n      setParsedComment(comment);\n    }\n  }, [comment]);\n\n  if (!parsedComment) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \" \\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0456\\u0432 \\u043F\\u043E\\u043A\\u0438 \\u043D\\u0435\\u043C\\u0430\\u0454\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  const onChange = (e, type) => {\n    console.log(e);\n    setParsedComment({ ...parsedComment,\n      [type]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: parsedComment._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: parsedComment.body,\n        onChange: e => onChange(e, 'body')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: parsedComment.date,\n        onChange: e => onChange(e, 'date')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn grey lighten-1 black-text\",\n        onClick: () => deleteHandler(parsedComment._id),\n        children: \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn grey lighten-1 black-text\",\n        onClick: () => putHandler(parsedComment._id, parsedComment),\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u0433\\u0443\\u0432\\u0430\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CommentInfo, \"l0cXzKqSZ0MWu3vKEEGhq/4w6M8=\");\n\n_c = CommentInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentInfo\");","map":{"version":3,"sources":["C:/Users/Kusia/Downloads/Projects/Diplom/client/src/Admin/CommentInfo.js"],"names":["React","useState","useEffect","CommentInfo","comment","deleteHandler","putHandler","console","log","parsedComment","setParsedComment","onChange","e","type","target","value","_id","body","date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;;;AACA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,aAAV;AAAyBC,EAAAA;AAAzB,CAAD,KAA0C;AAAA;;AACjEC,EAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACF,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,IAAD,CAAlD;AACAC,EAAAA,SAAS,CAAC,MAAK;AACb,QAAIE,OAAJ,EAAY;AACRG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACFM,MAAAA,gBAAgB,CAACN,OAAD,CAAhB;AACD;AACF,GALQ,EAKN,CAACA,OAAD,CALM,CAAT;;AAMA,MAAI,CAACK,aAAL,EAAqB;AACnB,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,QAAME,QAAQ,GAAG,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAC5BN,IAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACAF,IAAAA,gBAAgB,CAAC,EAAC,GAAGD,aAAJ;AAAmB,OAACI,IAAD,GAAQD,CAAC,CAACE,MAAF,CAASC;AAApC,KAAD,CAAhB;AACA,GAHF;;AAMA,sBACI;AAAA,4BACM;AAAA,6BAAI;AAAA,kBAAMN,aAAa,CAACO;AAApB;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YADN,eAEM;AAAA,6BAAI;AAAO,QAAA,KAAK,EAAEP,aAAa,CAACQ,IAA5B;AAAkC,QAAA,QAAQ,EAAGL,CAAD,IAAKD,QAAQ,CAACC,CAAD,EAAI,MAAJ;AAAzD;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFN,eAGM;AAAA,6BAAI;AAAO,QAAA,KAAK,EAAEH,aAAa,CAACS,IAA5B;AAAmC,QAAA,QAAQ,EAAGN,CAAD,IAAKD,QAAQ,CAACC,CAAD,EAAI,MAAJ;AAA1D;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAHN,eAIM;AAAA,6BAAI;AAAQ,QAAA,SAAS,EAAC,+BAAlB;AAAkD,QAAA,OAAO,EAAE,MAAIP,aAAa,CAACI,aAAa,CAACO,GAAf,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJN,eAOM;AAAA,6BACA;AAAQ,QAAA,SAAS,EAAC,+BAAlB;AAAkD,QAAA,OAAO,EAAE,MAAIV,UAAU,CAACG,aAAa,CAACO,GAAf,EAAoBP,aAApB,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAPN;AAAA,kBADJ;AAYD,CA9BM;;GAAMN,W;;KAAAA,W","sourcesContent":["import React, { useState , useEffect} from 'react'\r\nexport const CommentInfo = ({comment, deleteHandler, putHandler}) => {\r\n    console.log(deleteHandler)\r\n  const [parsedComment, setParsedComment] = useState(null)\r\n  useEffect(()=> {\r\n    if (comment){\r\n        console.log(comment)\r\n      setParsedComment(comment)\r\n    }\r\n  }, [comment])\r\n  if (!parsedComment ) {\r\n    return <p className=\"center\"> Комментарів поки немає</p>\r\n  }\r\n  const onChange = (e, type) => {\r\n    console.log(e)\r\n    setParsedComment({...parsedComment, [type]: e.target.value})\r\n   }\r\n \r\n\r\n  return (\r\n      <>\r\n            <td><div>{parsedComment._id}</div></td>\r\n            <td><input value={parsedComment.body} onChange={(e)=>onChange(e, 'body')}/></td>\r\n            <td><input value={parsedComment.date}  onChange={(e)=>onChange(e, 'date')}/></td>\r\n            <th><button className=\"btn grey lighten-1 black-text\" onClick={()=>deleteHandler(parsedComment._id)}>\r\n                Видалити\r\n            </button></th>\r\n            <th>\r\n            <button className=\"btn grey lighten-1 black-text\" onClick={()=>putHandler(parsedComment._id, parsedComment)}>Редагувати</button></th>\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}