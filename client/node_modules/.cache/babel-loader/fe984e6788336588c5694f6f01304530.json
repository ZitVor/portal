{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kusia\\\\Downloads\\\\Projects\\\\Diplom\\\\client\\\\src\\\\Admin\\\\AdminUsers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useCallback, useEffect } from 'react';\nimport { Loader } from '../сomponents/Loader';\nimport { useHttp } from '../hook/http.hook';\nimport { AuthContext } from '../context/AuthContext';\nimport { AdminListOfUsers } from '../Admin/AdminListOfUsers';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AdminUsers = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const {\n    loading,\n    request\n  } = useHttp();\n  const {\n    token\n  } = useContext(AuthContext);\n  const fetchUsers = useCallback(async () => {\n    try {\n      const fetched = await request('/api/admin/getusers', 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      console.log(fetched);\n      setUsers(fetched);\n    } catch (e) {}\n  }, [token, request]);\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading && /*#__PURE__*/_jsxDEV(AdminListOfUsers, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this)\n  }, void 0, false);\n};\n\n_s(AdminUsers, \"5QnQfVST+8F0k7Qs5OxXxPHV1pw=\", false, function () {\n  return [useHttp];\n});\n\n_c = AdminUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminUsers\");","map":{"version":3,"sources":["C:/Users/Kusia/Downloads/Projects/Diplom/client/src/Admin/AdminUsers.js"],"names":["React","useContext","useState","useCallback","useEffect","Loader","useHttp","AuthContext","AdminListOfUsers","AdminUsers","users","setUsers","loading","request","token","fetchUsers","fetched","Authorization","console","log","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,EAA0BC,QAA1B,EAAoCC,WAApC,EAAiDC,SAAjD,QAAiE,OAAjE;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAAQC,gBAAR,QAA+B,2BAA/B;AACA,OAAO,cAAP;;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAACU,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBP,OAAO,EAAlC;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAUb,UAAU,CAACM,WAAD,CAA1B;AAEA,QAAMQ,UAAU,GAAGZ,WAAW,CAAC,YAAY;AACzC,QAAI;AACF,YAAMa,OAAO,GAAG,MAAMH,OAAO,CAAC,qBAAD,EAAwB,KAAxB,EAA+B,IAA/B,EAAqC;AAChEI,QAAAA,aAAa,EAAG,UAASH,KAAM;AADiC,OAArC,CAA7B;AAGAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAL,MAAAA,QAAQ,CAACK,OAAD,CAAR;AAED,KAPD,CAOE,OAAOI,CAAP,EAAU,CAAE;AACf,GAT6B,EAS3B,CAACN,KAAD,EAAQD,OAAR,CAT2B,CAA9B;AAWAT,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,MAAIH,OAAJ,EAAa;AACX,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,cACG,CAACA,OAAD,iBAAY,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEF;AAAzB;AAAA;AAAA;AAAA;AAAA;AADf,mBADF;AAKD,CA7BM;;GAAMD,U;UAEgBH,O;;;KAFhBG,U","sourcesContent":["import React,{useContext, useState, useCallback, useEffect} from 'react'\r\nimport {Loader} from '../сomponents/Loader'\r\nimport {useHttp} from '../hook/http.hook'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport {AdminListOfUsers} from '../Admin/AdminListOfUsers'\r\nimport '../index.css'\r\nexport const AdminUsers = () => {\r\n  const [users, setUsers] = useState([])\r\n  const {loading, request} = useHttp()\r\n  const {token} = useContext(AuthContext)\r\n\r\n  const fetchUsers = useCallback(async () => {\r\n    try {\r\n      const fetched = await request('/api/admin/getusers', 'GET', null, {\r\n        Authorization: `Bearer ${token}`\r\n      })\r\n      console.log(fetched)\r\n      setUsers(fetched)\r\n\r\n    } catch (e) {}\r\n  }, [token, request])\r\n\r\n  useEffect(() => {\r\n    fetchUsers()\r\n  }, [fetchUsers])\r\n\r\n  if (loading) {\r\n    return <Loader/>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!loading && <AdminListOfUsers users={users} />}\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}