{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kusia\\\\Downloads\\\\Projects\\\\Diplom\\\\client\\\\src\\\\pages\\\\Rate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { useHttp } from '../hook/http.hook';\nimport { AuthContext } from '../context/AuthContext';\nimport { Loader } from '../сomponents/Loader';\nimport { RateList } from '../сomponents/RateList';\nimport '../index.css';\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst {\n  auth\n} = require('..');\n\nexport const Rate = () => {\n  _s();\n\n  const {\n    token\n  } = useContext(AuthContext);\n  const {\n    request,\n    loading\n  } = useHttp();\n  const [rate, setRate] = useState(null);\n  const getRate = useCallback(async () => {\n    try {\n      const fetched = await request(`/api/rate`, 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      setRate(fetched);\n    } catch (e) {}\n  }, [token, request]);\n  useEffect(() => {\n    getRate();\n  }, [getRate]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading && rate && /*#__PURE__*/_jsxDEV(RateList, {\n      rate: rate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 31\n    }, this)\n  }, void 0, false);\n};\n\n_s(Rate, \"b+R+o98Njsce+7kz5YM7lQf3Fgs=\", false, function () {\n  return [useHttp];\n});\n\n_c = Rate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rate\");","map":{"version":3,"sources":["C:/Users/Kusia/Downloads/Projects/Diplom/client/src/pages/Rate.js"],"names":["React","useContext","useEffect","useState","useCallback","NavLink","useHistory","useHttp","AuthContext","Loader","RateList","auth","require","Rate","token","request","loading","rate","setRate","getRate","fetched","Authorization","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,EAA+CC,WAA/C,QAAiE,OAAjE;AACA,SAAQC,OAAR,EAAiBC,UAAjB,QAAkC,kBAAlC;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,OAAO,cAAP;AACA,OAAO,cAAP;;;;AACA,MAAM;AAACC,EAAAA;AAAD,IAASC,OAAO,CAAC,IAAD,CAAtB;;AACA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACtB,QAAM;AAACC,IAAAA;AAAD,MAAUb,UAAU,CAACO,WAAD,CAA1B;AACA,QAAM;AAACO,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBT,OAAO,EAAlC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAMgB,OAAO,GAAGf,WAAW,CAAC,YAAY;AACtC,QAAI;AACF,YAAMgB,OAAO,GAAG,MAAML,OAAO,CAAE,WAAF,EAAc,KAAd,EAAqB,IAArB,EAA2B;AACtDM,QAAAA,aAAa,EAAG,UAASP,KAAM;AADuB,OAA3B,CAA7B;AAIAI,MAAAA,OAAO,CAACE,OAAD,CAAP;AAED,KAPD,CAOE,OAAOE,CAAP,EAAU,CAAE;AACf,GAT0B,EASxB,CAACR,KAAD,EAAQC,OAAR,CATwB,CAA3B;AAWAb,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAIA,MAAIH,OAAJ,EAAa;AACX,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,cACI,CAACA,OAAD,IAAYC,IAAZ,iBAAoB,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADxB,mBADF;AAMH,CA9BM;;GAAMJ,I;UAEkBN,O;;;KAFlBM,I","sourcesContent":["import React, {useContext, useEffect, useState,useCallback} from 'react'\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport {useHttp} from '../hook/http.hook'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport {Loader} from '../сomponents/Loader'\r\nimport {RateList} from '../сomponents/RateList'\r\nimport '../index.css'\r\nimport \"../index.css\"\r\nconst {auth} = require('..')\r\nexport const Rate = () => {\r\n    const {token} = useContext(AuthContext)\r\n    const {request, loading} = useHttp()\r\n    const [rate, setRate] = useState(null)\r\n  \r\n    const getRate = useCallback(async () => {\r\n      try {\r\n        const fetched = await request(`/api/rate`, 'GET', null, {\r\n          Authorization: `Bearer ${token}`\r\n        })\r\n  \r\n        setRate(fetched)\r\n  \r\n      } catch (e) {}\r\n    }, [token, request])\r\n  \r\n    useEffect(() => {\r\n      getRate()\r\n    }, [getRate])\r\n  \r\n    if (loading) {\r\n      return <Loader />\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        { !loading && rate && <RateList rate={rate} /> }\r\n      </>\r\n    )\r\n   \r\n}"]},"metadata":{},"sourceType":"module"}