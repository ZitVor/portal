{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kusia\\\\Downloads\\\\Projects\\\\Diplom\\\\client\\\\src\\\\\\u0441omponents\\\\UserTaskCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useHttp } from '../hook/http.hook';\nimport { AuthContext } from '../context/AuthContext';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UserTaskCard = ({\n  taskfromusers\n}) => {\n  _s();\n\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const {\n    request\n  } = useHttp();\n  const {\n    id\n  } = useParams();\n  const [decision, setDecision] = useState('');\n\n  const pressHandler = async () => {\n    try {\n      console.log(decision);\n      const data = await request(`/api/decisive/create/${id}`, 'POST', {\n        text: decision,\n        decisiveuseremail: auth.userEmail\n      }, {\n        Authorization: `Bearer ${auth.token}`\n      });\n    } catch (e) {}\n  };\n\n  useEffect(() => {\n    window.M.updateTextFields();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0417\\u0430\\u0432\\u0434\\u0430\\u043D\\u043D\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430 \\u0437\\u0430\\u0432\\u0434\\u0430\\u043D\\u043D\\u044F:\", taskfromusers.topic]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0421\\u0443\\u0442\\u043D\\u0456\\u0441\\u0442\\u044C \\u0437\\u0430\\u0432\\u0434\\u0430\\u043D\\u043D\\u044F:\", taskfromusers.body]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u0442\\u0432\\u043E\\u0440\\u0435\\u043D\\u043D\\u044F:\", new Date(taskfromusers.date).toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0432:\", taskfromusers.authoremail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0432\\u0456\\u0434\\u043F\\u043E\\u0432\\u0456\\u0434\\u044C\",\n          id: \"text\",\n          name: \"text\",\n          type: \"text\",\n          value: decision,\n          onChange: e => setDecision(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn grey lighten-1 black-text\",\n        onClick: pressHandler,\n        children: \"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserTaskCard, \"Aj0JU+3+yBkHiq8bHfyTEo5sKiE=\", false, function () {\n  return [useHistory, useHttp, useParams];\n});\n\n_c = UserTaskCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTaskCard\");","map":{"version":3,"sources":["C:/Users/Kusia/Downloads/Projects/Diplom/client/src/сomponents/UserTaskCard.js"],"names":["React","useContext","useState","useEffect","useHistory","useParams","useHttp","AuthContext","UserTaskCard","taskfromusers","history","auth","request","id","decision","setDecision","pressHandler","console","log","data","text","decisiveuseremail","userEmail","Authorization","token","e","window","M","updateTextFields","topic","body","Date","date","toLocaleDateString","authoremail","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,kBAApC;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAO,cAAP;;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAqB;AAAA;;AAE/C,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,IAAI,GAAGV,UAAU,CAACM,WAAD,CAAvB;AACA,QAAM;AAACK,IAAAA;AAAD,MAAYN,OAAO,EAAzB;AACA,QAAM;AAACO,IAAAA;AAAD,MAAOR,SAAS,EAAtB;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMc,YAAY,GAAG,YAAW;AACzB,QAAI;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACH,YAAMK,IAAI,GAAG,MAAMP,OAAO,CAAE,wBAAuBC,EAAG,EAA5B,EAA+B,MAA/B,EAAuC;AAACO,QAAAA,IAAI,EAAEN,QAAP;AAAiBO,QAAAA,iBAAiB,EAAEV,IAAI,CAACW;AAAzC,OAAvC,EAA4F;AACpHC,QAAAA,aAAa,EAAG,UAASZ,IAAI,CAACa,KAAM;AADgF,OAA5F,CAA1B;AAGD,KALE,CAKD,OAAOC,CAAP,EAAU,CAAE;AACf,GAPH;;AAQEtB,EAAAA,SAAS,CAAC,MAAM;AACZuB,IAAAA,MAAM,CAACC,CAAP,CAASC,gBAAT;AACD,GAFM,EAEJ,EAFI,CAAT;AAIA,sBACC;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,qGAAmBnB,aAAa,CAACoB,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,uHAAsBpB,aAAa,CAACqB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,qGAAmB,IAAIC,IAAJ,CAAStB,aAAa,CAACuB,IAAvB,EAA6BC,kBAA7B,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,gEAAYxB,aAAa,CAACyB,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACC;AACE,UAAA,WAAW,EAAC,mGADd;AAEQ,UAAA,EAAE,EAAC,MAFX;AAGQ,UAAA,IAAI,EAAG,MAHf;AAIQ,UAAA,IAAI,EAAC,MAJb;AAKQ,UAAA,KAAK,EAAEpB,QALf;AAMQ,UAAA,QAAQ,EAAEW,CAAC,IAAIV,WAAW,CAACU,CAAC,CAACU,MAAF,CAASC,KAAV;AANlC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADA,eAWD;AACQ,QAAA,SAAS,EAAC,+BADlB;AAEQ,QAAA,OAAO,EAAEpB,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXC;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADD;AA0BH,CA9CM;;GAAMR,Y;UAEKJ,U,EAEEE,O,EACLD,S;;;KALFG,Y","sourcesContent":["import React,{useContext, useState, useEffect} from 'react'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {useHttp} from '../hook/http.hook'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport '../index.css'\r\n\r\nexport const UserTaskCard = ({taskfromusers}) => {\r\n  \r\n  const history = useHistory()\r\n  const auth = useContext(AuthContext)\r\n  const {request} = useHttp()\r\n  const {id} = useParams()\r\n  const [decision, setDecision] = useState('')\r\n   \r\n  const pressHandler = async() => {\r\n         try {\r\n           console.log(decision)\r\n        const data = await request(`/api/decisive/create/${id}`, 'POST', {text: decision, decisiveuseremail: auth.userEmail}, {\r\n          Authorization: `Bearer ${auth.token}`\r\n        })\r\n      } catch (e) {}\r\n    }\r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n      }, [])\r\n\r\n    return (\r\n     <>\r\n         <h3>Завдання</h3>\r\n         <p>Назва завдання:{taskfromusers.topic}</p>\r\n         <p>Сутність завдання:{taskfromusers.body}</p>\r\n         <p>Дата створення:{new Date(taskfromusers.date).toLocaleDateString()}</p>\r\n         <p>Створив:{taskfromusers.authoremail}</p>\r\n         <div>\r\n         <div className=\"input-field\">\r\n          <input\r\n            placeholder=\"Введіть відповідь\" \r\n                  id=\"text\"\r\n                  name = \"text\"\r\n                  type=\"text\"\r\n                  value={decision}\r\n                  onChange={e => setDecision(e.target.value)}\r\n          />\r\n        </div>\r\n        <button \r\n                className=\"btn grey lighten-1 black-text\"\r\n                onClick={pressHandler}\r\n                >Створити \r\n            </button>\r\n         </div>\r\n     </>    \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}