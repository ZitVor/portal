{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kusia\\\\Downloads\\\\Projects\\\\Diplom\\\\client\\\\src\\\\pages\\\\Forum\\\\Forum.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useCallback, useEffect } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Loader } from '../../сomponents/Loader';\nimport { useHttp } from '../../hook/http.hook';\nimport { AuthContext } from '../../context/AuthContext';\nimport { ForumList } from '../Forum/ForumList';\nimport '../../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Forum = () => {\n  _s();\n\n  const [themes, setThemes] = useState([]);\n  const {\n    loading,\n    request\n  } = useHttp();\n  const {\n    token\n  } = useContext(AuthContext);\n  const fetchThemes = useCallback(async () => {\n    try {\n      const fetched = await request('/api/forumtheme/', 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      setThemes(fetched);\n    } catch (e) {}\n  }, [token, request]);\n  useEffect(() => {\n    fetchThemes();\n  }, [fetchThemes]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading && /*#__PURE__*/_jsxDEV(ForumList, {\n      themes: themes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 20\n    }, this)\n  }, void 0, false);\n};\n\n_s(Forum, \"sCwKnYFXfGwnp/lwZSw3+/abHeM=\", false, function () {\n  return [useHttp];\n});\n\n_c = Forum;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forum\");","map":{"version":3,"sources":["C:/Users/Kusia/Downloads/Projects/Diplom/client/src/pages/Forum/Forum.js"],"names":["React","useContext","useState","useCallback","useEffect","NavLink","useHistory","Loader","useHttp","AuthContext","ForumList","Forum","themes","setThemes","loading","request","token","fetchThemes","fetched","Authorization","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,EAA0BC,QAA1B,EAAoCC,WAApC,EAAiDC,SAAjD,QAAiE,OAAjE;AACA,SAAQC,OAAR,EAAiBC,UAAjB,QAAkC,kBAAlC;AACA,SAAQC,MAAR,QAAqB,yBAArB;AACA,SAAQC,OAAR,QAAsB,sBAAtB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AACA,OAAO,iBAAP;;;AACA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAACY,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBP,OAAO,EAAlC;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAUf,UAAU,CAACQ,WAAD,CAA1B;AAEA,QAAMQ,WAAW,GAAGd,WAAW,CAAC,YAAY;AAC1C,QAAI;AACF,YAAMe,OAAO,GAAG,MAAMH,OAAO,CAAC,kBAAD,EAAqB,KAArB,EAA4B,IAA5B,EAAkC;AAC7DI,QAAAA,aAAa,EAAG,UAASH,KAAM;AAD8B,OAAlC,CAA7B;AAGAH,MAAAA,SAAS,CAACK,OAAD,CAAT;AACD,KALD,CAKE,OAAOE,CAAP,EAAU,CAAE;AACf,GAP8B,EAO5B,CAACJ,KAAD,EAAQD,OAAR,CAP4B,CAA/B;AASAX,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAIH,OAAJ,EAAa;AACX,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,cACG,CAACA,OAAD,iBAAY,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA;AADf,mBADF;AAKD,CA3BM;;GAAMD,K;UAEgBH,O;;;KAFhBG,K","sourcesContent":["import React,{useContext, useState, useCallback, useEffect} from 'react'\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport {Loader} from '../../сomponents/Loader'\r\nimport {useHttp} from '../../hook/http.hook'\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport {ForumList} from '../Forum/ForumList'\r\nimport '../../index.css'\r\nexport const Forum = () => {\r\n  const [themes, setThemes] = useState([])\r\n  const {loading, request} = useHttp()\r\n  const {token} = useContext(AuthContext)\r\n\r\n  const fetchThemes = useCallback(async () => {\r\n    try {\r\n      const fetched = await request('/api/forumtheme/', 'GET', null, {\r\n        Authorization: `Bearer ${token}`\r\n      })\r\n      setThemes(fetched)\r\n    } catch (e) {}\r\n  }, [token, request])\r\n\r\n  useEffect(() => {\r\n    fetchThemes()\r\n  }, [fetchThemes])\r\n\r\n  if (loading) {\r\n    return <Loader/>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!loading && <ForumList themes={themes} />}\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}