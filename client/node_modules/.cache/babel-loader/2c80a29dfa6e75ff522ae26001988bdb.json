{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { set } from \"mongoose\";\nimport { useCallback, useState, useEffect } from \"react\";\nconst storageName = 'userData';\nexport const useAuth = () => {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const login = useCallback((jwtToken, id) => {\n    setToken(jwtToken);\n    setUserId(id);\n    localStorage.setItem(storageName, JSON.stringify({\n      userId: id,\n      token: jwtToken\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(storageName);\n  }, []);\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(storageName));\n\n    if (data && data.token) {\n      login(data.token, data.userId);\n    }\n  }, [login]);\n  return {\n    login,\n    logout,\n    token,\n    userId\n  };\n};\n\n_s(useAuth, \"VayQobHgqFP1Ye+Fn1pdkSRQKUo=\");","map":{"version":3,"sources":["C:/Users/Kusia/Downloads/Projects/Diplom/client/src/hook/auth.hook.js"],"names":["set","useCallback","useState","useEffect","storageName","useAuth","token","setToken","userId","setUserId","login","jwtToken","id","localStorage","setItem","JSON","stringify","logout","removeItem","data","parse","getItem"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,UAApB;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AAEA,MAAMC,WAAW,GAAG,UAApB;AACA,OAAO,MAAMC,OAAO,GAAG,MAAI;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAMQ,KAAK,GAAGT,WAAW,CAAC,CAACU,QAAD,EAAWC,EAAX,KAAkB;AACxCL,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACAF,IAAAA,SAAS,CAACG,EAAD,CAAT;AAEAC,IAAAA,YAAY,CAACC,OAAb,CAAqBV,WAArB,EAAkCW,IAAI,CAACC,SAAL,CAC9B;AAACR,MAAAA,MAAM,EAACI,EAAR;AAAYN,MAAAA,KAAK,EAACK;AAAlB,KAD8B,CAAlC;AAGH,GAPwB,EAOtB,EAPsB,CAAzB;AAQA,QAAMM,MAAM,GAAGhB,WAAW,CAAC,MAAM;AAC7BM,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,IAAAA,YAAY,CAACK,UAAb,CAAwBd,WAAxB;AACH,GAJyB,EAIvB,EAJuB,CAA1B;AAMAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMgB,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqBjB,WAArB,CAAX,CAAb;;AAEA,QAAGe,IAAI,IAAIA,IAAI,CAACb,KAAhB,EAAsB;AAClBI,MAAAA,KAAK,CAACS,IAAI,CAACb,KAAN,EAAaa,IAAI,CAACX,MAAlB,CAAL;AACH;AACJ,GANQ,EAMP,CAACE,KAAD,CANO,CAAT;AAOA,SAAO;AAACA,IAAAA,KAAD;AAAQO,IAAAA,MAAR;AAAgBX,IAAAA,KAAhB;AAAuBE,IAAAA;AAAvB,GAAP;AACH,CA3BM;;GAAMH,O","sourcesContent":["import { set } from \"mongoose\"\r\nimport { useCallback, useState, useEffect } from \"react\"\r\n\r\nconst storageName = 'userData'\r\nexport const useAuth = ()=>{\r\n    const [token, setToken] = useState(null)\r\n    \r\n    const [userId, setUserId] = useState(null)\r\n\r\n    const login = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n\r\n        localStorage.setItem(storageName, JSON.stringify(\r\n            {userId:id, token:jwtToken}\r\n            ))\r\n    }, [])\r\n    const logout = useCallback(() => {\r\n        setToken(null)\r\n        setUserId(null)\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if(data && data.token){\r\n            login(data.token, data.userId)\r\n        }\r\n    },[login])\r\n    return {login, logout, token, userId}\r\n}"]},"metadata":{},"sourceType":"module"}