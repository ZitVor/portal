{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kusia\\\\Downloads\\\\Projects\\\\Diplom\\\\client\\\\src\\\\pages\\\\SuperUser\\\\Estimate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\nimport { AuthContext } from '../../context/AuthContext';\nimport { useHttp } from '../../hook/http.hook';\nimport { Loader } from '../../сomponents/Loader';\nimport { EstimateInfo } from './EstimateInfo';\nimport '../../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Estimate = () => {\n  _s();\n\n  const {\n    token\n  } = useContext(AuthContext);\n  const {\n    request,\n    loading\n  } = useHttp();\n  const [decisive, setDecision] = useState(null);\n  const desicionId = useParams().id;\n  console.log(desicionId);\n  const getDecision = useCallback(async () => {\n    try {\n      const fetched = await request(`/api/decisive/getby/${desicionId}`, 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      setDecision(fetched);\n    } catch (e) {}\n  }, [token, desicionId, request]);\n  useEffect(() => {\n    getDecision();\n  }, [getDecision]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading && decisive && /*#__PURE__*/_jsxDEV(EstimateInfo, {\n      decisive: decisive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 34\n    }, this)\n  }, void 0, false);\n};\n\n_s(Estimate, \"2rpWwzYnMfEqPhIpTwWjlQSZjf8=\", false, function () {\n  return [useHttp, useParams];\n});\n\n_c = Estimate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Estimate\");","map":{"version":3,"sources":["C:/Users/Kusia/Downloads/Projects/Diplom/client/src/pages/SuperUser/Estimate.js"],"names":["React","useCallback","useContext","useEffect","useState","NavLink","useHistory","useParams","AuthContext","useHttp","Loader","EstimateInfo","Estimate","token","request","loading","decisive","setDecision","desicionId","id","console","log","getDecision","fetched","Authorization","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,WAAd,EAA2BC,UAA3B,EAAuCC,SAAvC,EAAkDC,QAAlD,QAAiE,OAAjE;AACA,SAAQC,OAAR,EAAiBC,UAAjB,EAA6BC,SAA7B,QAA6C,kBAA7C;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAAQC,MAAR,QAAqB,yBAArB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,OAAO,iBAAP;;;AACA,OAAO,MAAOC,QAAQ,GAAG,MAAK;AAAA;;AAC1B,QAAK;AAACC,IAAAA;AAAD,MAAUX,UAAU,CAACM,WAAD,CAAzB;AACA,QAAM;AAACM,IAAAA,OAAD;AAASC,IAAAA;AAAT,MAAoBN,OAAO,EAAjC;AACA,QAAM,CAACO,QAAD,EAAUC,WAAV,IAAuBb,QAAQ,CAAC,IAAD,CAArC;AACA,QAAMc,UAAU,GAAGX,SAAS,GAAGY,EAA/B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,QAAMI,WAAW,GAAGrB,WAAW,CAAC,YAAW;AACxC,QAAG;AACE,YAAMsB,OAAO,GAAG,MAAMT,OAAO,CAAE,uBAAsBI,UAAW,EAAnC,EAAqC,KAArC,EAA4C,IAA5C,EAAiD;AAC1EM,QAAAA,aAAa,EAAE,UAASX,KAAM;AAD4C,OAAjD,CAA7B;AAGAI,MAAAA,WAAW,CAACM,OAAD,CAAX;AACJ,KALD,CAMA,OAAME,CAAN,EAAQ,CAAE;AACZ,GAR8B,EAQ7B,CAACZ,KAAD,EAAQK,UAAR,EAAoBJ,OAApB,CAR6B,CAA/B;AAUAX,EAAAA,SAAS,CAAC,MAAI;AACVmB,IAAAA,WAAW;AACd,GAFQ,EAEP,CAACA,WAAD,CAFO,CAAT;;AAKA,MAAGP,OAAH,EAAW;AACP,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI;AAAA,cACC,CAACA,OAAD,IAAYC,QAAZ,iBAAwB,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA;AADzB,mBADJ;AAMH,CA/BM;;GAAOJ,Q;UAEgBH,O,EAEPF,S;;;KAJTK,Q","sourcesContent":["import React,{useCallback, useContext, useEffect, useState} from 'react'\r\nimport {NavLink, useHistory, useParams} from 'react-router-dom'\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport { useHttp } from '../../hook/http.hook'\r\nimport {Loader} from '../../сomponents/Loader'\r\nimport {EstimateInfo} from './EstimateInfo'\r\nimport '../../index.css'\r\nexport const  Estimate = () =>{\r\n    const{token} = useContext(AuthContext)\r\n    const {request,loading} = useHttp()\r\n    const [decisive,setDecision]=useState(null)\r\n    const desicionId = useParams().id\r\n\r\n    console.log(desicionId)\r\n    const getDecision = useCallback(async () =>{\r\n       try{\r\n            const fetched = await request(`/api/decisive/getby/${desicionId}`,'GET', null,{\r\n                Authorization:`Bearer ${token}`\r\n            })\r\n            setDecision(fetched)\r\n       } \r\n       catch(e){}\r\n    },[token, desicionId, request])\r\n\r\n    useEffect(()=>{\r\n        getDecision()\r\n    },[getDecision])\r\n\r\n\r\n    if(loading){\r\n        return <Loader/>\r\n    }\r\n    return(\r\n        <>\r\n        {!loading && decisive && <EstimateInfo decisive={decisive}/>}\r\n       </>\r\n    )\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}