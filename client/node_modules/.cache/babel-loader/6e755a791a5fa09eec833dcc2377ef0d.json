{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kusia\\\\Downloads\\\\Projects\\\\Diplom\\\\client\\\\src\\\\pages\\\\Rate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { useHttp } from '../hook/http.hook';\nimport { AuthContext } from '../context/AuthContext';\nimport { Loader } from '../сomponents/Loader';\nimport { RateList } from '../сomponents/RateList';\nimport '../index.css';\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Rate = () => {\n  _s();\n\n  const {\n    token\n  } = useContext(AuthContext);\n  const {\n    request,\n    loading\n  } = useHttp();\n  const [users, setUsers] = useState(null);\n  const getUsers = useCallback(async () => {\n    try {\n      const fetched = await request(`/api/rate/all`, 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      console.log();\n      setUsers(fetched);\n    } catch (e) {\n      console.log();\n    }\n  }, [token, request]);\n  useEffect(() => {\n    getUsers();\n  }, [getUsers]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading && users && /*#__PURE__*/_jsxDEV(RateList, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }, this)\n  }, void 0, false);\n};\n\n_s(Rate, \"r6Iww2uqorgexq6xrWBgJ/rWnkg=\", false, function () {\n  return [useHttp];\n});\n\n_c = Rate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rate\");","map":{"version":3,"sources":["C:/Users/Kusia/Downloads/Projects/Diplom/client/src/pages/Rate.js"],"names":["React","useContext","useEffect","useState","useCallback","NavLink","useHistory","useHttp","AuthContext","Loader","RateList","Rate","token","request","loading","users","setUsers","getUsers","fetched","Authorization","console","log","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,EAA+CC,WAA/C,QAAiE,OAAjE;AACA,SAAQC,OAAR,EAAiBC,UAAjB,QAAkC,kBAAlC;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,OAAO,cAAP;AACA,OAAO,cAAP;;;AACA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACtB,QAAM;AAACC,IAAAA;AAAD,MAAUX,UAAU,CAACO,WAAD,CAA1B;AACA,QAAM;AAACK,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBP,OAAO,EAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMc,QAAQ,GAAGb,WAAW,CAAC,YAAY;AACvC,QAAI;AACF,YAAMc,OAAO,GAAG,MAAML,OAAO,CAAE,eAAF,EAAkB,KAAlB,EAAyB,IAAzB,EAA+B;AAC1DM,QAAAA,aAAa,EAAG,UAASP,KAAM;AAD2B,OAA/B,CAA7B;AAGAQ,MAAAA,OAAO,CAACC,GAAR;AACAL,MAAAA,QAAQ,CAACE,OAAD,CAAR;AAED,KAPD,CAOE,OAAOI,CAAP,EAAU;AACVF,MAAAA,OAAO,CAACC,GAAR;AACD;AACF,GAX2B,EAWzB,CAACT,KAAD,EAAQC,OAAR,CAXyB,CAA5B;AAaAX,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;AAIA,MAAIH,OAAJ,EAAa;AACX,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,cACI,CAACA,OAAD,IAAYC,KAAZ,iBAAqB,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA;AADzB,mBADF;AAMH,CAhCM;;GAAMJ,I;UAEkBJ,O;;;KAFlBI,I","sourcesContent":["import React, {useContext, useEffect, useState,useCallback} from 'react'\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport {useHttp} from '../hook/http.hook'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport {Loader} from '../сomponents/Loader'\r\nimport {RateList} from '../сomponents/RateList'\r\nimport '../index.css'\r\nimport \"../index.css\"\r\nexport const Rate = () => {\r\n    const {token} = useContext(AuthContext)\r\n    const {request, loading} = useHttp()\r\n    const [users, setUsers] = useState(null)\r\n  \r\n    const getUsers = useCallback(async () => {\r\n      try {\r\n        const fetched = await request(`/api/rate/all`, 'GET', null, {\r\n          Authorization: `Bearer ${token}`\r\n        })\r\n        console.log()\r\n        setUsers(fetched)\r\n  \r\n      } catch (e) {\r\n        console.log()\r\n      }\r\n    }, [token, request])\r\n  \r\n    useEffect(() => {\r\n      getUsers()\r\n    }, [getUsers])\r\n  \r\n    if (loading) {\r\n      return <Loader />\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        { !loading && users && <RateList users={users} /> }\r\n      </>\r\n    )\r\n   \r\n}"]},"metadata":{},"sourceType":"module"}