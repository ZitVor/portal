{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kusia\\\\Downloads\\\\Projects\\\\Diplom\\\\client\\\\src\\\\\\u0441omponents\\\\ForumThemeCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHttp } from '../hook/http.hook';\nimport { AuthContext } from '../context/AuthContext';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Mongoose, Types } from 'mongoose';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ForumThemeCard = ({\n  post\n}) => {\n  _s();\n\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const {\n    request\n  } = useHttp();\n  const postId = useParams().id;\n  /*const [comment, setComment] = useState({\r\n     theme: postId, body:''\r\n  })*/\n\n  const [comment, setComment] = useState('');\n  /*const changeHandler = event => {\r\n      setComment({ ...comment, [event.target.name]: event.target.value })\r\n  }*/\n\n  useEffect(() => {\n    window.M.updateTextFields();\n  }, []);\n\n  const pressHandler = async () => {\n    //TODO POST ID\n    try {\n      const data = await request('/api/comment/create', 'POST', {\n        body: body,\n        theme: postId\n      }, {\n        Authorization: `Bearer ${auth.token}`\n      });\n      console.log(data);\n      console.log(postId); //  history.push(`/detail/${data.link._id}`)\n    } catch (e) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: post.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 70\n      }, this), new Date(post.date).toLocaleDateString(), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 138\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u043C\\u044B: \", post.topic]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u0442\\u0435\\u043C\\u044B:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s8 offset-s2\",\n        style: {\n          paddingTop: '2rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n            id: \"comment\",\n            type: \"text\",\n            name: \"body\",\n            value: e => seComment(e.target.value),\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn grey lighten-1 black-text\",\n            onClick: pressHandler,\n            children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ForumThemeCard, \"Y/VMeZWB3I8MUYoDu8r+CYy+nhY=\", false, function () {\n  return [useHistory, useHttp, useParams];\n});\n\n_c = ForumThemeCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForumThemeCard\");","map":{"version":3,"sources":["C:/Users/Kusia/Downloads/Projects/Diplom/client/src/сomponents/ForumThemeCard.js"],"names":["React","useContext","useEffect","useState","useHttp","AuthContext","useHistory","useParams","Mongoose","Types","ForumThemeCard","post","history","auth","request","postId","id","comment","setComment","window","M","updateTextFields","pressHandler","data","body","theme","Authorization","token","console","log","e","display","justifyContent","author","Date","date","toLocaleDateString","topic","paddingTop","seComment","target","value","changeHandler"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../hook/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport { Mongoose, Types } from 'mongoose'\r\n\r\nexport const ForumThemeCard = ({post}) => {\r\n  const history = useHistory()\r\n  const auth = useContext(AuthContext)\r\n  const {request} = useHttp()\r\n  \r\n  const postId = useParams().id\r\n\r\n /*const [comment, setComment] = useState({\r\n    theme: postId, body:''\r\n})*/\r\nconst [comment, setComment] = useState('')\r\n/*const changeHandler = event => {\r\n    setComment({ ...comment, [event.target.name]: event.target.value })\r\n}*/\r\n  useEffect(() => {\r\n    window.M.updateTextFields()\r\n  }, [])\r\n\r\n  const pressHandler = async () => {\r\n   //TODO POST ID\r\n      try {\r\n        const data = await request('/api/comment/create', 'POST', {body: body, theme: postId}, {\r\n          Authorization: `Bearer ${auth.token}`\r\n        })\r\n        console.log(data)\r\n        console.log(postId)\r\n      //  history.push(`/detail/${data.link._id}`)\r\n      } catch (e) {}\r\n    }\r\n  \r\n\r\n  return (\r\n      <div>\r\n        <p style={{display:\"flex\", justifyContent:\"space-between\" }}><span>{post.author}</span>{new Date(post.date).toLocaleDateString()}<span></span></p>\r\n        <p>Название темы: {post.topic}</p>\r\n        <p>Текст темы:</p>\r\n        <p>{post.body}</p>\r\n      <div className=\"row\">\r\n      <div className=\"col s8 offset-s2\" style={{paddingTop: '2rem'}}>\r\n        <div className=\"input-field\">\r\n          <input\r\n            placeholder=\"Введите комментарий\"\r\n            id=\"comment\"\r\n            type=\"text\"\r\n            name=\"body\"\r\n            value={e => seComment(e.target.value)}\r\n            onChange={changeHandler}\r\n          />\r\n         \r\n        <button \r\n                className=\"btn grey lighten-1 black-text\"\r\n                onClick={pressHandler}>\r\n                Создать \r\n            </button>\r\n      </div>\r\n    </div></div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}